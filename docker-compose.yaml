version: "3.9"

services:
  imgress-producer:
    build:
      context: ./producer
      dockerfile: Dockerfile.producer
      target: prod
    ports:
      - 8080:8080
    env_file:
      - ./producer/producer.env
    depends_on:
      - imgress-db
      - imgress-mq
    networks:
      - imgress-network-db
      - imgress-network-mq
    command: sh -c 'while ! nc -z imgress-db 7432; do sleep 1; done; ./producer'

  imgress-cleanup:
    build:
      context: ./cleanup
      dockerfile: Dockerfile.cleanup
      target: prod
    ports:
      - 4040:4040
    env_file:
      - ./cleanup/cleanup.env
    depends_on:
      - imgress-producer
    networks:
      - imgress-network-db
    command: sh -c 'while ! nc -z imgress-db 7432; do sleep 1; done; ./cleanup'

  imgress-consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile.consumer
      target: prod
    ports:
      - 5050:5050
    env_file:
      - ./consumer/consumer.env
    depends_on:
      - imgress-producer
    networks:
      - imgress-network-mq

  imgress-db:
    image: postgres
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 7432:7432
    networks:
      - imgress-network-db
    restart: always

  imgress-mq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672   # for sender and consumer connections
      - 15672:15672 # for serve RabbitMQ GUI
    environment:
      - RABBITMQ_ERLANG_COOKIE=
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-logs:/var/log/rabbitmq
    networks:
      - imgress-network-mq
    restart: always

volumes:
  postgres-data:
  rabbitmq-data:
  rabbitmq-logs:

networks:
  imgress-network-db:
    driver: bridge
  imgress-network-mq:
    driver: bridge
